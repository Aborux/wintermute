# ToDos and Need-To-Finish's.

This document provides a list of things to be done and checked off by the team
in a collaborative manner.

***

* Have WINTERMUTE_VERSION be populated with a commitsh from Git (up to 10 characters) [0.1-devXXXXXXXX]
 - Could do the same for Bazaar and Subversion if one can do it in CMake.
* Create Doxygen tag files so sub-projects related to Wintermute can cross reference.
* Drop Boost::ProgramOptions and implement a more flexible command-line parsing system. -- CHECK (jalcine)
* Provide more of a unified building experience with CMake.
 * Implement UseWintermute.cmake
 * Implement FindWintermute.cmake
  * Allow discovery of 'wintermute' executable.
  * Allow detection of already installed plug-ins using find_package()
    - Should allow plug-ins to resolve build dependencies.
* Decouple the use of QApplication and make Wintermute not rely on X.
* Allow plug-ins to run as a stand-alone to Wintermute.
 * Allow said plug-ins to reconnect with Wintermute.
* Work on abstracting the IPC control of Wintermute.
 - Could implement a custom language to do procedural calls.
 - With that, you could implement IPC for different platforms (Windows, Mac OS X, Linux).
 - Implementing a language as such could allow for REST API communications to Wintermute.
 - This could allow Wintermute instances to run in a cluster at top speed.
* Add a few macros for debugging output that could interface with QDebug.
 - It'd work like qDebug(), except that it'd pass the name of the executing class
   if it has QMetaObject support to make output like:
   (plugin:WapiData) [DomFormSourcePrivate/Debug] form.cpp:40 ) *MESSAGE*
 - Parts of the debugging output can be toggled on and off.